<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
	</head>
	<body>
		<h3>新用户注册</h3>
		<label for="phone">手机号：</label>
		<input type="text" id="phone">
		<span id="phoneMsg">请输入正确的手机号</span><br>
		
		<input type="button" value="提交注册信息">
		
		<script>
			/****1.手机号输入框失去焦点时，进入输入验证*****/
			phone.onblur = function(){
				let p = phone.value
				//先进行简单的客户端验证(格式验证)——客户端验证是可能被跳过去
				if( !/^1[3-9]\d{9}$/.test(p) ){
					phoneMsg.innerHTML = '手机号码格式不正确！'
					phone.focus()  //让手机号输入框再次获取焦点
					return
				}
				//再进行服务器端验证(内容验证)——验证手机号是否已被占用
				//1
				let  xhr = new XMLHttpRequest()
				//2
				xhr.open('GET', '/v2/user/checkphone?phone='+p)
				//3
				xhr.onload = function(){
					//console.log(xhr.responseText)
					//console.log(xhr.responseText.code)
					let data = JSON.parse(xhr.responseText)//JSON反序列化
					if(data.code===201){
						phoneMsg.innerHTML = '该手机号已经注册过！请换一个！'
					}else if(data.code===200){
						phoneMsg.innerHTML = '该手机号未被注册，可以使用！'
					}else {
						phoneMsg.innerHTML = '您的输入有误'
					}
				}
				//4
				xhr.send()
			}
		</script>
	</body>
</html>



/**
 * 接口：检测手机是否可用
 * 地址：/v2/user/checkphone?phone=18311111112
 * 方法：GET
 * 查询字符串：phone
 * 返回响应：
	{"code": 200, "msg": "non-exists" }
	{"code": 201, "msg": "exists" }
	{"code": 400, "msg": "phone required" }
 */
router.get('/checkphone', (req, res)=>{
	let p = req.query.phone
	//检查客户端有没有提交查询数据
	if( !p  ||  p.trim().length!=11 ){   //String.trim()裁剪掉两头的空白
		res.send({code:400, msg:'phone required'})//send()会JS对象=>JSON字符串
		return //终断当前方法的执行
	}
	//TODO：此处还可以在服务器端验证电话号码格式是否正确
	let sql = 'SELECT  uid  FROM  xz_user  WHERE   phone=?'
	pool.query(sql, p, (err, result)=>{
		if(err)throw err
		if(result.length>0){		//查询到了该手机号对应的用户
			res.send({code:201, msg:'exists'})
		}else {						//该手机号没有对应的用户
			res.send({code:200, msg:'non-exists'})
		}
	})
})
